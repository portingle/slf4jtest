// .\gradlew clean build publishToSonatype closeAndReleaseSonatypeStagingRepository

buildscript {

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        gradlePluginPortal()
    }


    dependencies {
        // check maven central for the latest release
        classpath 'com.portingle:classpath-hell:1.5'
    }

}

plugins {
    id("io.github.gradle-nexus.publish-plugin").version("1.0.0")
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'

repositories {
    mavenCentral()
}

group 'com.portingle'
version '1.2.0'
archivesBaseName = "slf4jtesting"

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.32'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.13'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//https://sasbury.github.io/notes/2019/gradle_travis_sonatype.html
artifacts {
    archives jar, javadocJar, sourcesJar
}

tasks {
    signing {
        onlyIf { nexusPublishing.useStaging.get() }

        sign configurations.archives
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
//                artifact jar
            artifact sourcesJar
            artifact javadocJar

//                artifact(sourcesJar) {
//                    classifier = "sources"
//                }
//
//                artifact(javadocJar) {
//                    classifier = "javadoc"
//                }

            pom {
                name = 'slf4jtesting'
                packaging = 'jar'
                description = 'SLF4JTesting is a library that provides facilities for log testing that are simple to use and optimised for use in environments with concurrent test execution and/or where console logging is desired.'
                url = 'https://github.com/portingle/slf4jtesting'

                scm {
                    connection = 'scm:git@github.com:portingle/slf4jtesting.git'
                    developerConnection = 'scm:git@github.com:portingle/slf4jtesting.git'
                    url = 'scm:git@github.com:portingle/slf4jtesting.git'
                }

                licenses {
                    license {
                        name = 'The MIT Licence (MIT)'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'Johnlon'
                        name = 'John Lonergan'
                    }
                }
            }

            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }

    }
}

nexusPublishing {
    repositories {
        // relies on sonatypeUsername/sonatypePassword being defined in "{gradle_home}/gradle.properties"
        sonatype()
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


test {
    testLogging.showStandardStreams = true
    testLogging {
        exceptionFormat = 'full'
        events "started", "passed", "skipped", "failed"
    }
}
